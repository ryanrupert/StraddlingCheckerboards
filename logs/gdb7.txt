(gdb) Temporary breakpoint 3 at 0x40145a: file src/Source.cpp, line 16.
Starting program: D:\Ryan\Documents\Projects\Code\Git\MapTests\bin/a.exe 
[New Thread 3924.0x24d0]

Temporary breakpoint 3, main () at src/Source.cpp:16
16	  std::string encoded;
(gdb) Continuing.

Breakpoint 1, decode (mymap=..., encoded=...) at src/Source.cpp:177
177	  std::string decoded;  //this will hold the decoded string
(gdb) Continuing.

Breakpoint 2, _fu19___ZTIi () at src/Source.cpp:278
278	        index+=2;
(gdb) 283	          temp = encoded.substr(index, 3);
(gdb) 284	          tempcomp[0] = temp.at(0);
(gdb) 285	          tempcomp[1] = temp.at(1);
(gdb) 286	          tempcomp[2] = temp.at(2);
(gdb) 288	          if ( (tempcomp[0] == tempcomp[1]) && (tempcomp[1] == tempcomp[2]) && (tempcomp[0] == tempcomp[2]) )
(gdb) 292	            decoded = decoded + temp[1];
(gdb) std::operator+<char, std::char_traits<char>, std::allocator<char> > (
    __lhs=..., __rhs=51 '3')
    at c:/mingw/lib/gcc/mingw32/5.3.0/include/c++/bits/basic_string.h:4842
4842	      __string_type __str(__lhs);
(gdb) 4843	      __str.append(__size_type(1), __rhs);
(gdb) 4844	      return __str;
(gdb) 4845	    }
(gdb) _fu19___ZTIi () at src/Source.cpp:294
294	            figfound = true;
(gdb) 295	            index += 3;
(gdb) 302	          temp = encoded.substr(index, 2);
(gdb) $1 = {static npos = <optimized out>, 
  _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, 
    _M_p = 0xca538 "TEST (ABORT) (TEST) TE3"}, _M_string_length = 23, {
    _M_local_buf = ",\000\000\000 (ABORT) (T", _M_allocated_capacity = 44}}
(gdb) $2 = 38
(gdb) $3 = 35
(gdb) $4 = {static npos = <optimized out>, 
  _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, _M_p = 0x67fbe0 "333"}, 
  _M_string_length = 3, {
    _M_local_buf = "333\000\000\000\000\000Èüg\000\200áïo", 
    _M_allocated_capacity = 3355443}}
(gdb) 304	          tempint = atoi(temp.c_str());
(gdb) $5 = {static npos = <optimized out>, 
  _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, _M_p = 0x67fbe0 "90"}, 
  _M_string_length = 2, {
    _M_local_buf = "90\000\000\000\000\000\000èüg\000\235Kío", 
    _M_allocated_capacity = 12345}}
(gdb) 305	        }while (!(tempint == figvalueint));
(gdb) $6 = 90
(gdb) $7 = 90
(gdb) 306	        index += 2;
(gdb) 311	      (codedouble == true) ? temp = encoded.substr(index, 2) : temp = encoded.at(index);
(gdb) 312	      (parinthfound == true) ? temp = encoded.substr(index, 2) : temp = encoded.at(index);
(gdb) 314	      tempint = atoi(temp.c_str());
(gdb) 317	      if((((codevalueint == tempint) && (codefound == true)) || ((parinthfound == true) && (parinthvalueint == tempint))) && (figfound != true))
(gdb) 364	      else if (figfound != true)
(gdb) 269	    while(index < length)
(gdb) A debugging session is active.

	Inferior 1 [process 3924] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
